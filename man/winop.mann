'\"
'\" Copyright 1991-1997 by Bell Labs Innovations for Lucent Technologies.
'\"
'\" Permission to use, copy, modify, and distribute this software and its
'\" documentation for any purpose and without fee is hereby granted, provided
'\" that the above copyright notice appear in all copies and that both that the
'\" copyright notice and warranty disclaimer appear in supporting documentation,
'\" and that the names of Lucent Technologies any of their entities not be used
'\" in advertising or publicity pertaining to distribution of the software
'\" without specific, written prior permission.
'\"
'\" Lucent Technologies disclaims all warranties with regard to this software,
'\" including all implied warranties of merchantability and fitness.  In no event
'\" shall Lucent Technologies be liable for any special, indirect or
'\" consequential damages or any damages whatsoever resulting from loss of use,
'\" data or profits, whether in an action of contract, negligence or other
'\" tortuous action, arising out of or in connection with the use or performance
'\" of this software.  
'\"
'\" Window command created by George Howlett.
'\"
.so man.macros
.TH winop n BLT_VERSION BLT "BLT Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
winop \- Perform assorted window and image operations
.SH SYNOPSIS
.sp
\fBwinop changes\fR \fIwindow\fR
.sp
\fBwinop gradients\fR \fIleftcolor\fR \fIrightcolor\fR \fIgradients\fR
.sp
\fBwinop image\fR \fIsubcommand\fR ...
.RS
.sp
\fBwinop image alpha\fR \fIsrcImage\fR \fIdestImage\fR \fIcolor\fR
.sp
\fBwinop image colors\fR ?-alpha? \fIsrcImage\fR
.sp
\fBwinop image convolve\fR \fIsrcImage\fR \fIdestImage\fR \fIfilter\fR
.sp
\fBwinop image gradient\fR \fIimage\fR \fIleftcolor\fR \fIrightcolor\fR ...
.sp
\fBwinop image merge\fR \fIsrcImage1\fR \fIsrcImage2\fR \fIdestImage\fR ?\fIalpha\fR? ?...?
.sp
\fBwinop image mirror\fR \fIsrcImage1\fR \fIdestImage\fR ?\fIx|y|xy|tile|outer|inner\fR? 
.sp
\fBwinop image quantize\fR \fIsrcImage\fR \fIdestImage\fR ?\fInColors\fR?
.sp
\fBwinop image readjpeg\fR \fIfilename\fR \fIphotoname\fR
.sp
\fBwinop image resample\fR \fIsrcImage\fR \fIdestImage\fR ?\fIhorizFilter\fR? ?\fIvertFilter\fR?
.sp
\fBwinop image rotate\fR \fIsrcImage\fR \fIdestImage\fR \fIangle\fR
.sp
\fBwinop image subsample\fR \fIsrcImage\fR \fIdestImage\fR \fIx\fR \fIy\fR \fIwidth\fR \fIheight\fR ?\fIhorizFilter\fR? ?\fIvertFilter\fR?
.RE

.sp
\fBwinop lower\fR ?\fIwindow\fR?...
.sp
\fBwinop map\fR ?\fIwindow\fR?...
.sp
\fBwinop move \fIwindow x y\fR
.sp
\fBwinop query\fR
.sp
\fBwinop raise\fR ?\fIwindow\fR?...
.sp
\fBwinop snap \fIwindow photoName\fR ?\fIwidth height\fR ?
.sp
\fBwinop unmap\fR ?\fIwindow\fR?...
.sp
\fBwinop warpto\fR ?\fIwindow\fR?
.BE
.SH DESCRIPTION
The \fBwinop\fR command performs various window and image operations on Tk
windows using low-level Xlib function calls to work around window
manager pecularities.
.SH INTRODUCTION
Tk has several commands for manipulating its windows: \fBraise\fR,
\fBlower\fR, \fBwm\fR, etc.  These commands ask the window manager to
perform operations on Tk windows.  In some cases, a particular window
manager won't perform the operation as expected.
.PP
For example, if you positioned a toplevel window using \fBwm geometry\fR,
the window may not actually be at those particular coordinates.  The
position of the window may be offset by dimensions of the title bar added
by the window manager.  
.PP
In situations like these, the \fBwinop\fR command can be used to
workaround these difficulties.  Instead, it makes low-level Xlib
(such \fBXRaiseWindow\fR and \fBXMapWindow\fR) calls to perform these
operations.
.CS
toplevel .top
wm withdraw .top

# Set the geometry to make the window manager 
# place the window.
wm geometry .top +100+100

# Move the window to the desired location
# and "update" to force the window manager
# to recognize it.
winop move .top 100 100
update 

wm deiconify .top
winop move .top 100 100
.CE
.SH OPERATIONS
The following operations are available for the \fBwinop\fR command:
.TP
\fBwinop changes\fR \fIwindow\fR
Realize window.
.TP
\fBwinop image\fR \fIsubcommand\fR ...
Image sub-commands.
.RS
.TP
\fBwinop image alpha \fR ?\fb-shift\fR?  \fIsrcImage\fR \fIdestImage\fR \fIcolor\fR ?\fIalpha\fR?  ?\fIwithalpha\fR?
Set image pixels of the given color to transparent.
If an alpha value is not given, it defaults to \fB0\fR
(meaning transparent).  An alpha of 255 is used for solid.
The \fIsrcImage\fR and \fIdestImage\fR may be the same.
If the \fIcolor\fR is \fB*\fR any color is matched.
If \fIcolor\fR is prefixed with \fB!\fR match is inverted.
.TP
\fBwinop gradients\fR \fIleftcolor\fR \fIrightcolor\fR \fIwidth\fR
Return a list of \fIwidth\fR colors that graduate from
\fIleftcolor\fR to the color just before \fIrightcolor\fR.
Note that the last color in the returned list is not \fIrightcolor\fR.
A typical use for this is calculating shadow colors.
.TP
\fBwinop image blur\fR \fIsrcImage dstImage\fR ?\fIradius\fR?
Blur an image using gaussian blur.
.TP
\fBwinop image colors\fR  ?\fB-alpha\fR? ?\fB-count\fR? \fIsrcImage\fR
Return list of distinct colors.  If -alpha is given, the alpha is appended
to each color after a colon, eg \fI#FF0000:00\fR.  If \fB-count\fR is
given, returns color/count pairs.
.TP
\fBwinop image convolve\fR \fIsrcImage\fR \fIdestImage\fR \fIfilter\fR
Convolve an image: filter is a list of numbers.
The \fIsrcImage\fR and \fIdestImage\fR may be the same.
.TP
\fBwinop image gradient\fR \fIimage\fR \fIleftcolor\fR \fIrightcolor\fR ...
Generate a gradient from left to right into \fIimage\fR.
The following options are available:
.RS
.TP 5
\fB-type halfsine|sine|linear|rectangular|radial|split|blank\fR
Set the type of gradient.  The default is \fBsine\fR.
.TP 5
\fB-skew N\fR
The \fIskew\fR determines the initial fraction of
the image that the gradient occupies, after which only rightcolor is used.
The skew must be > 0 and <= 1.0. The default value is \fI1.0\fR,
meaning not skewed.
.TP 5
\fB-slant N\fR
Make the gradient slant where a value of 1.0 slants at 45 degrees.
The value must be between -100.0 and 100.0.
.TP 5
\fB-mathval N\fR
Curve the gradient by passing the \fIY\fR position
to the function \fI-mathfunc\fR.
The value must be between -100.0 and 100.0 (typically 1.0).
The default is \fB0.0\fR, which means disabled.
.TP 5
\fB-mathfunc X\fR
Function to use with \fI-mathval\fR.
The default value is \fBsin\fR.
The value must be one of:
\fBsin cos tan sinh cosh tanh asin acos atan log log10 exp sqrt rand circle\fR.
.TP 5
\fB-rand N\fR
Add small random purturbations to gradient to avoid striation lines.
The value must be between 0.0 and 0.1.
.TP 5
\fB-height N\fR
Change the image height.
.TP 5
\fB-width N\fR
Change the image width.
.RE
.TP
\fBwinop image merge\fR \fIsrcImage1\fR \fIsrcImage2\fR \fIdestImage\fR ?\fIopacity\fR? ?\fIopacity2\fR? 
Merge two images with alpha blending.  The default ?\fIopacity\fR? is 0.5,
and the default for ?\fIopacity2\fR?  is 1.0 - ?\fIopacity\fR?.
.TP
\fBwinop image mirror\fR \fIsrcImage1\fR \fIdestImage\fR ?\fIx|y|xy|tile|outer|inner\fR?  ?halo?
Flips an image on axis x, y or xy.  The \fItile\fR option results in a double
size image with mirror copies appended to generate a tile-able image.
The \fIouter\fR option is used to resize an image while preserving
the outside border by \fIhalo\fR pixels (default is 16).
The \fIinner\fR option copies from the center of source keeping it centered.
These last 2 are used implicitly by \fBblt::tile::button -bdtile\fR, etc.
The \fIsrcImage1\fR and \fIdestImage\fR 
must not be the same if using \fItile\fR, \fIinner\fR or \fIouter\fR.
The default is \fBxy\fR.
.TP
\fBwinop image quantize\fR \fIsrcImage\fR \fIdestImage\fR ?\fInColors\fR?
Limit number of colors in image.  Default 1.
The \fIsrcImage\fR and \fIdestImage\fR may be the same.
.TP
\fBwinop image readjpeg\fR \fIfilename\fR \fIphotoname\fR
Read a jpeg image using libjpeg.  IMG makes this obsolete
(and thus probably not builtin).
.TP
\fBwinop image recolor\fR \fIsrcImage\fR \fIdestImage\fR \fIoldColor\fR \fInewColor\fR ?\fIalpha\fR?
Change pixels from \fIoldColor\fR to \fInewColor\fR.
If ?\fIalpha\fR? is not given it defaults to 255 (opaque).
The \fIsrcImage\fR and \fIdestImage\fR may be the same.
.TP
\fBwinop image resample\fR \fIsrcImage\fR \fIdestImage\fR ?\fIhorizFilter\fR? ?\fIvertFilter\fR?
Resample an image.  If \fIsrcImage\fR and \fIdestImage\fR are the same
size, just makes a copy.  Otherwise the image is resized
to the size of \fIdestImage\fR, possibly wih filtering.
Filters are one of: \fBbell bessel box bspline catrom default dummy gauss8
gaussian gi lanczos3 mitchell none sinc triangle\fR.
The \fIdestImage\fR must be greater than 1x1.
.TP
\fBwinop image rotate\fR \fIsrcImage\fR \fIdestImage\fR \fIangle\fR
Rotate an image.  The \fIsrcImage\fR and \fIdestImage\fR 
may be the same.
.TP
\fBwinop image subsample\fR \fIsrcImage\fR \fIdestImage\fR \fIx\fR \fIy\fR \fIwidth\fR \fIheight\fR ?\fIhorizFilter\fR? ?\fIvertFilter\fR?
Resample area of an image.  See resample.
.TP
\fBwinop image trans\fR \fIimage x y\fR ?\fIalpha\fR?
Get or set the integer alpha value within an image.
.RE
.TP
\fBwinop lower\fR ?\fIwindow\fR?...
Lowers \fIwindow\fR to the bottom of the X window stack.  \fIWindow\fR is
the path name of a Tk window.  
.TP
\fBwinop map\fR ?\fIwindow\fR?...
Maps \fIwindow\fR on the screen.  \fIWindow\fR
is the path name of a Tk window. If \fIwindow\fR is already mapped,
this command has no effect.  
.TP
\fBwinop move \fIwindow x y\fR
Move \fIwindow\fR to the screen location specified by \fIx\fR
and \fIy\fR. \fIWindow\fR is the path name of a Tk window, while
\fIx\fR and \fIy\fR are screen coordinates.  This command returns 
the empty string.
.TP
\fBwinop query\fR
Query pointer position.  Returns @X,Y.
.TP
\fBwinop raise\fR ?\fIwindow\fR?...
Raises \fIwindow\fR to the top of the X window stack. \fIWindow\fR must be
a valid path name of a Tk window.  This command returns the empty string.
.TP
\fBwinop snap \fIwindow photoName\fR ?\fIwidth height\fR?
Takes a snapshot of the \fIwindow\fR and stores the contents in the
photo image \fIphotoName\fR. \fIWindow\fR is the valid path name of a
Tk window which must be totally visible (unobscured).  \fIPhotoName\fR
is the name of a Tk photo image which must already exist.  This command
can fail if the window is obscured in any fashion, such as covered by 
another window or partially offscreen.  In that case, an error message
is returned.  If \fIwidth\fR or \fIheight\fR is given, the image is
resampled to the given size.
.TP
\fBwinop unmap\fR ?\fIwindow\fR?...
Unmaps \fIwindow\fR from the screen. \fIWindow\fR is the path name of a Tk
window. 
.TP
\fBwinop warpto\fR ?\fIwindow\fR?
Warps the pointer to \fIwindow\fR. \fIWindow\fR is the path name of a Tk window
which must be mapped. If \fIwindow\fR is in the form \fI@x,y\fR, where
\fIx\fR and \fIy\fR are root screen coordinates, the pointer is warped to
that location on the screen.
.sp
[\fII've never heard a good case for warping the pointer in an
application.  It can be useful for testing, but in applications, it's
always a bad idea.  Simply stated, the user owns the pointer, not the
application.  If you have an application that needs it, I'd like to
hear about it.\fR]
.sp
If no \fIwindow\fR argument is present the current location of the
pointer is returned. The location is returned as a list in the form
"\fIx y\fR", where \fIx\fR and \fIy\fR are the current coordinates of
the pointer.
.SH KEYWORDS
window, map, raise, lower, pointer, warp

